package:
  name: parserator
  version: "0.6.4"

source:
  fn: parserator-0.6.4.tar.gz
  url: https://pypi.python.org/packages/cf/29/f1612f3a3fb1c81a1d5497092d12acad019c16b15c897d46d25218ea5112/parserator-0.6.4.tar.gz
  md5: 558dd9c997cb22937076f45d75ab2070
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # noarch_python: True
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - parserator = parserator:main
    #
    # Would create an entry point called parserator that calls parserator.main()

    - parserator = parserator.main:dispatch

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - future >=0.14.3
    - lxml ==3.6.0
    - python-crfsuite >=0.7

  run:
    - python
    - future >=0.14.3
    - lxml ==3.6.0
    - python-crfsuite >=0.7

test:
  # Python imports
  imports:
    - parserator

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - parserator --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/datamade/parserator
  license: MIT License
  summary: 'Create parsers'
  license_family: MIT

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
